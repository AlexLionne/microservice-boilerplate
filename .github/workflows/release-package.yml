# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Microservice Package

on:
  push:
    branches:
      - main
jobs:
  version:
    runs-on: ubuntu-latest
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    steps:
      - uses: actions/checkout@v2
      - uses: fregante/setup-git-user@v1
      - name: Bump version
        run: npm version patch -m "Release version %s"
      - run: git push
  build:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: npm ci
  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - uses: fregante/setup-git-user@v1
      - run: npm version patch
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_AUTH_TOKEN: ${{secrets.NPM_ACCESS_TOKEN}}
  update-services:
    needs: publish
    strategy:
      matrix:
        repo: [
            'Nesga-ARC/auth-microservice',
            'Nesga-ARC/backoffice-microservice',
            'Nesga-ARC/nesga-socket',
            'Nesga-ARC/season-microservice',
            'Nesga-ARC/shop-microservice',
            'Nesga-ARC/user-microservice',
            'Nesga-ARC/watcher-microservice',
        ]
    runs-on: ubuntu-latest
    steps:
      - name: get-npm-version
          id: package-version
          uses: martinbeentjes/npm-get-version-action@master
      - name: Repository Update
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ${{ matrix.repo }}
          event-type: update-microservice
          client-payload: '{"version": "${{steps.package-version.outputs.current-version}}", ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
